# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _openstudiogltf
else:
    import _openstudiogltf

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import weakref

class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _openstudiogltf.delete_SwigPyIterator

    def value(self):
        return _openstudiogltf.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _openstudiogltf.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _openstudiogltf.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _openstudiogltf.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _openstudiogltf.SwigPyIterator_equal(self, x)

    def copy(self):
        return _openstudiogltf.SwigPyIterator_copy(self)

    def next(self):
        return _openstudiogltf.SwigPyIterator_next(self)

    def __next__(self):
        return _openstudiogltf.SwigPyIterator___next__(self)

    def previous(self):
        return _openstudiogltf.SwigPyIterator_previous(self)

    def advance(self, n):
        return _openstudiogltf.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _openstudiogltf.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _openstudiogltf.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _openstudiogltf.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _openstudiogltf.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _openstudiogltf.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _openstudiogltf.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _openstudiogltf:
_openstudiogltf.SwigPyIterator_swigregister(SwigPyIterator)
SHARED_PTR_DISOWN = _openstudiogltf.SHARED_PTR_DISOWN
from .import openstudioutilities
from .import openstudioutilitiescore
from .import openstudioutilitiestime
from .import openstudioutilitiesdata
from .import openstudioutilitiesunits
from .import openstudioutilitiesplot
from .import openstudioutilitiesgeometry
from .import openstudioutilitiessql
from .import openstudioutilitiesbcl
from .import openstudioutilitiesidd
from .import openstudioutilitiesidf
from .import openstudioutilitiesfiletypes
from .import openstudioutilitiesxml
from .import openstudiomodel
class GltfBoundingBox(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _openstudiogltf.GltfBoundingBox_swiginit(self, _openstudiogltf.new_GltfBoundingBox(*args))

    def lookAtR(self):
        return _openstudiogltf.GltfBoundingBox_lookAtR(self)

    def setLookAtR(self, lookAtR):
        return _openstudiogltf.GltfBoundingBox_setLookAtR(self, lookAtR)

    def lookAtX(self):
        return _openstudiogltf.GltfBoundingBox_lookAtX(self)

    def setLookAtX(self, lookAtX):
        return _openstudiogltf.GltfBoundingBox_setLookAtX(self, lookAtX)

    def lookAtY(self):
        return _openstudiogltf.GltfBoundingBox_lookAtY(self)

    def setLookAtY(self, lookAtY):
        return _openstudiogltf.GltfBoundingBox_setLookAtY(self, lookAtY)

    def lookAtZ(self):
        return _openstudiogltf.GltfBoundingBox_lookAtZ(self)

    def setLookAtZ(self, lookAtZ):
        return _openstudiogltf.GltfBoundingBox_setLookAtZ(self, lookAtZ)

    def maxX(self):
        return _openstudiogltf.GltfBoundingBox_maxX(self)

    def setMaxX(self, maxX):
        return _openstudiogltf.GltfBoundingBox_setMaxX(self, maxX)

    def maxY(self):
        return _openstudiogltf.GltfBoundingBox_maxY(self)

    def setMaxY(self, maxY):
        return _openstudiogltf.GltfBoundingBox_setMaxY(self, maxY)

    def maxZ(self):
        return _openstudiogltf.GltfBoundingBox_maxZ(self)

    def setMaxZ(self, maxZ):
        return _openstudiogltf.GltfBoundingBox_setMaxZ(self, maxZ)

    def minX(self):
        return _openstudiogltf.GltfBoundingBox_minX(self)

    def setMinX(self, minX):
        return _openstudiogltf.GltfBoundingBox_setMinX(self, minX)

    def minY(self):
        return _openstudiogltf.GltfBoundingBox_minY(self)

    def setMinY(self, minY):
        return _openstudiogltf.GltfBoundingBox_setMinY(self, minY)

    def minZ(self):
        return _openstudiogltf.GltfBoundingBox_minZ(self)

    def setMinZ(self, minZ):
        return _openstudiogltf.GltfBoundingBox_setMinZ(self, minZ)
    __swig_destroy__ = _openstudiogltf.delete_GltfBoundingBox

# Register GltfBoundingBox in _openstudiogltf:
_openstudiogltf.GltfBoundingBox_swigregister(GltfBoundingBox)
class GltfModelObjectMetaData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _openstudiogltf.GltfModelObjectMetaData_swiginit(self, _openstudiogltf.new_GltfModelObjectMetaData(*args))

    def color(self):
        return _openstudiogltf.GltfModelObjectMetaData_color(self)

    def setColor(self, color):
        return _openstudiogltf.GltfModelObjectMetaData_setColor(self, color)

    def handle(self):
        return _openstudiogltf.GltfModelObjectMetaData_handle(self)

    def setHandle(self, handle):
        return _openstudiogltf.GltfModelObjectMetaData_setHandle(self, handle)

    def iddObjectType(self):
        return _openstudiogltf.GltfModelObjectMetaData_iddObjectType(self)

    def setIddObjectType(self, iddObjectType):
        return _openstudiogltf.GltfModelObjectMetaData_setIddObjectType(self, iddObjectType)

    def name(self):
        return _openstudiogltf.GltfModelObjectMetaData_name(self)

    def setName(self, name):
        return _openstudiogltf.GltfModelObjectMetaData_setName(self, name)

    def isOpentoBelow(self):
        return _openstudiogltf.GltfModelObjectMetaData_isOpentoBelow(self)

    def setOpentoBelow(self, opentoBelow):
        return _openstudiogltf.GltfModelObjectMetaData_setOpentoBelow(self, opentoBelow)

    def nominalZCoordinate(self):
        return _openstudiogltf.GltfModelObjectMetaData_nominalZCoordinate(self)

    def setNominalZCoordinate(self, nominalZCoordinate):
        return _openstudiogltf.GltfModelObjectMetaData_setNominalZCoordinate(self, nominalZCoordinate)

    def nominalFloortoCeilingHeight(self):
        return _openstudiogltf.GltfModelObjectMetaData_nominalFloortoCeilingHeight(self)

    def setNominalFloortoCeilingHeight(self, nominalFloortoCeilingHeight):
        return _openstudiogltf.GltfModelObjectMetaData_setNominalFloortoCeilingHeight(self, nominalFloortoCeilingHeight)

    def multiplier(self):
        return _openstudiogltf.GltfModelObjectMetaData_multiplier(self)

    def setMultiplier(self, multiplier):
        return _openstudiogltf.GltfModelObjectMetaData_setMultiplier(self, multiplier)
    __swig_destroy__ = _openstudiogltf.delete_GltfModelObjectMetaData

# Register GltfModelObjectMetaData in _openstudiogltf:
_openstudiogltf.GltfModelObjectMetaData_swigregister(GltfModelObjectMetaData)
class GltfMetaData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _openstudiogltf.GltfMetaData_swiginit(self, _openstudiogltf.new_GltfMetaData(*args))

    def glTFModelObjectMetaDataVector(self):
        return _openstudiogltf.GltfMetaData_glTFModelObjectMetaDataVector(self)

    def setGlTFModelObjectMetaDataVector(self, glTFModelObjectMetaDataVector):
        return _openstudiogltf.GltfMetaData_setGlTFModelObjectMetaDataVector(self, glTFModelObjectMetaDataVector)

    def glTFBoundingBox(self):
        return _openstudiogltf.GltfMetaData_glTFBoundingBox(self)

    def setGlTFBoundingBox(self, glTFBoundingBox):
        return _openstudiogltf.GltfMetaData_setGlTFBoundingBox(self, glTFBoundingBox)

    def buildingStoryNames(self):
        return _openstudiogltf.GltfMetaData_buildingStoryNames(self)

    def setBuildingStoryNames(self, *args):
        return _openstudiogltf.GltfMetaData_setBuildingStoryNames(self, *args)

    def generator(self):
        return _openstudiogltf.GltfMetaData_generator(self)

    def setGenerator(self, generator):
        return _openstudiogltf.GltfMetaData_setGenerator(self, generator)

    def type(self):
        return _openstudiogltf.GltfMetaData_type(self)

    def setType(self, type):
        return _openstudiogltf.GltfMetaData_setType(self, type)

    def version(self):
        return _openstudiogltf.GltfMetaData_version(self)

    def setVersion(self, version):
        return _openstudiogltf.GltfMetaData_setVersion(self, version)

    def northAxis(self):
        return _openstudiogltf.GltfMetaData_northAxis(self)

    def setNorthAxis(self, *args):
        return _openstudiogltf.GltfMetaData_setNorthAxis(self, *args)

    def thermalZoneCount(self):
        return _openstudiogltf.GltfMetaData_thermalZoneCount(self)

    def setThermalZoneCount(self, thermalZoneCount):
        return _openstudiogltf.GltfMetaData_setThermalZoneCount(self, thermalZoneCount)

    def spaceCount(self):
        return _openstudiogltf.GltfMetaData_spaceCount(self)

    def setSpaceCount(self, spaceCount):
        return _openstudiogltf.GltfMetaData_setSpaceCount(self, spaceCount)

    def spaceTypeCount(self):
        return _openstudiogltf.GltfMetaData_spaceTypeCount(self)

    def setSpaceTypeCount(self, spaceTypeCount):
        return _openstudiogltf.GltfMetaData_setSpaceTypeCount(self, spaceTypeCount)

    def constructionSetCount(self):
        return _openstudiogltf.GltfMetaData_constructionSetCount(self)

    def setConstructionSetCount(self, constructionSetCount):
        return _openstudiogltf.GltfMetaData_setConstructionSetCount(self, constructionSetCount)

    def airLoopCount(self):
        return _openstudiogltf.GltfMetaData_airLoopCount(self)

    def setAirLoopCount(self, airLoopCount):
        return _openstudiogltf.GltfMetaData_setAirLoopCount(self, airLoopCount)

    def buildingStoryCount(self):
        return _openstudiogltf.GltfMetaData_buildingStoryCount(self)

    def setBuildingStoryCount(self, buildingStoryCount):
        return _openstudiogltf.GltfMetaData_setBuildingStoryCount(self, buildingStoryCount)
    __swig_destroy__ = _openstudiogltf.delete_GltfMetaData

# Register GltfMetaData in _openstudiogltf:
_openstudiogltf.GltfMetaData_swigregister(GltfMetaData)
class GltfUserData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _openstudiogltf.GltfUserData_swiginit(self, _openstudiogltf.new_GltfUserData(*args))

    def handle(self):
        return _openstudiogltf.GltfUserData_handle(self)

    def setHandle(self, handle):
        return _openstudiogltf.GltfUserData_setHandle(self, handle)

    def name(self):
        return _openstudiogltf.GltfUserData_name(self)

    def setName(self, name):
        return _openstudiogltf.GltfUserData_setName(self, name)

    def surfaceType(self):
        return _openstudiogltf.GltfUserData_surfaceType(self)

    def setSurfaceType(self, surfaceType):
        return _openstudiogltf.GltfUserData_setSurfaceType(self, surfaceType)

    def constructionName(self):
        return _openstudiogltf.GltfUserData_constructionName(self)

    def setConstructionName(self, constructionName):
        return _openstudiogltf.GltfUserData_setConstructionName(self, constructionName)

    def constructionHandle(self):
        return _openstudiogltf.GltfUserData_constructionHandle(self)

    def setConstructionHandle(self, constructionHandle):
        return _openstudiogltf.GltfUserData_setConstructionHandle(self, constructionHandle)

    def constructionMaterialName(self):
        return _openstudiogltf.GltfUserData_constructionMaterialName(self)

    def setConstructionMaterialName(self, constructionMaterialName):
        return _openstudiogltf.GltfUserData_setConstructionMaterialName(self, constructionMaterialName)

    def surfaceName(self):
        return _openstudiogltf.GltfUserData_surfaceName(self)

    def setSurfaceName(self, surfaceName):
        return _openstudiogltf.GltfUserData_setSurfaceName(self, surfaceName)

    def surfaceHandle(self):
        return _openstudiogltf.GltfUserData_surfaceHandle(self)

    def setSurfaceHandle(self, surfaceHandle):
        return _openstudiogltf.GltfUserData_setSurfaceHandle(self, surfaceHandle)

    def subSurfaceName(self):
        return _openstudiogltf.GltfUserData_subSurfaceName(self)

    def setSubSurfaceName(self, subSurfaceName):
        return _openstudiogltf.GltfUserData_setSubSurfaceName(self, subSurfaceName)

    def subSurfaceHandle(self):
        return _openstudiogltf.GltfUserData_subSurfaceHandle(self)

    def setSubSurfaceHandle(self, subSurfaceHandle):
        return _openstudiogltf.GltfUserData_setSubSurfaceHandle(self, subSurfaceHandle)

    def spaceName(self):
        return _openstudiogltf.GltfUserData_spaceName(self)

    def setSpaceName(self, spaceName):
        return _openstudiogltf.GltfUserData_setSpaceName(self, spaceName)

    def spaceHandle(self):
        return _openstudiogltf.GltfUserData_spaceHandle(self)

    def setSpaceHandle(self, spaceHandle):
        return _openstudiogltf.GltfUserData_setSpaceHandle(self, spaceHandle)

    def shadingName(self):
        return _openstudiogltf.GltfUserData_shadingName(self)

    def setShadingName(self, shadingName):
        return _openstudiogltf.GltfUserData_setShadingName(self, shadingName)

    def shadingHandle(self):
        return _openstudiogltf.GltfUserData_shadingHandle(self)

    def setShadingHandle(self, shadingHandle):
        return _openstudiogltf.GltfUserData_setShadingHandle(self, shadingHandle)

    def thermalZoneName(self):
        return _openstudiogltf.GltfUserData_thermalZoneName(self)

    def setThermalZoneName(self, thermalZoneName):
        return _openstudiogltf.GltfUserData_setThermalZoneName(self, thermalZoneName)

    def thermalZoneHandle(self):
        return _openstudiogltf.GltfUserData_thermalZoneHandle(self)

    def setThermalZoneHandle(self, thermalZoneHandle):
        return _openstudiogltf.GltfUserData_setThermalZoneHandle(self, thermalZoneHandle)

    def thermalZoneMaterialName(self):
        return _openstudiogltf.GltfUserData_thermalZoneMaterialName(self)

    def setThermalZoneMaterialName(self, thermalZoneMaterialName):
        return _openstudiogltf.GltfUserData_setThermalZoneMaterialName(self, thermalZoneMaterialName)

    def spaceTypeName(self):
        return _openstudiogltf.GltfUserData_spaceTypeName(self)

    def setSpaceTypeName(self, spaceTypeName):
        return _openstudiogltf.GltfUserData_setSpaceTypeName(self, spaceTypeName)

    def spaceTypeHandle(self):
        return _openstudiogltf.GltfUserData_spaceTypeHandle(self)

    def setSpaceTypeHandle(self, spaceTypeHandle):
        return _openstudiogltf.GltfUserData_setSpaceTypeHandle(self, spaceTypeHandle)

    def spaceTypeMaterialName(self):
        return _openstudiogltf.GltfUserData_spaceTypeMaterialName(self)

    def setSpaceTypeMaterialName(self, spaceTypeMaterialName):
        return _openstudiogltf.GltfUserData_setSpaceTypeMaterialName(self, spaceTypeMaterialName)

    def buildingStoryName(self):
        return _openstudiogltf.GltfUserData_buildingStoryName(self)

    def setBuildingStoryName(self, buildingStoryName):
        return _openstudiogltf.GltfUserData_setBuildingStoryName(self, buildingStoryName)

    def buildingStoryHandle(self):
        return _openstudiogltf.GltfUserData_buildingStoryHandle(self)

    def setBuildingStoryHandle(self, buildingStoryHandle):
        return _openstudiogltf.GltfUserData_setBuildingStoryHandle(self, buildingStoryHandle)

    def buildingStoryMaterialName(self):
        return _openstudiogltf.GltfUserData_buildingStoryMaterialName(self)

    def setBuildingStoryMaterialName(self, buildingStoryMaterialName):
        return _openstudiogltf.GltfUserData_setBuildingStoryMaterialName(self, buildingStoryMaterialName)

    def buildingUnitName(self):
        return _openstudiogltf.GltfUserData_buildingUnitName(self)

    def setBuildingUnitName(self, buildingUnitName):
        return _openstudiogltf.GltfUserData_setBuildingUnitName(self, buildingUnitName)

    def buildingUnitHandle(self):
        return _openstudiogltf.GltfUserData_buildingUnitHandle(self)

    def setBuildingUnitHandle(self, buildingUnitHandle):
        return _openstudiogltf.GltfUserData_setBuildingUnitHandle(self, buildingUnitHandle)

    def buildingUnitMaterialName(self):
        return _openstudiogltf.GltfUserData_buildingUnitMaterialName(self)

    def setBuildingUnitMaterialName(self, buildingUnitMaterialName):
        return _openstudiogltf.GltfUserData_setBuildingUnitMaterialName(self, buildingUnitMaterialName)

    def constructionSetName(self):
        return _openstudiogltf.GltfUserData_constructionSetName(self)

    def setConstructionSetName(self, constructionSetName):
        return _openstudiogltf.GltfUserData_setConstructionSetName(self, constructionSetName)

    def constructionSetHandle(self):
        return _openstudiogltf.GltfUserData_constructionSetHandle(self)

    def setConstructionSetHandle(self, constructionSetHandle):
        return _openstudiogltf.GltfUserData_setConstructionSetHandle(self, constructionSetHandle)

    def constructionSetMaterialName(self):
        return _openstudiogltf.GltfUserData_constructionSetMaterialName(self)

    def setConstructionSetMaterialName(self, constructionSetMaterialName):
        return _openstudiogltf.GltfUserData_setConstructionSetMaterialName(self, constructionSetMaterialName)

    def outsideBoundaryCondition(self):
        return _openstudiogltf.GltfUserData_outsideBoundaryCondition(self)

    def setOutsideBoundaryCondition(self, outsideBoundaryCondition):
        return _openstudiogltf.GltfUserData_setOutsideBoundaryCondition(self, outsideBoundaryCondition)

    def outsideBoundaryConditionObjectName(self):
        return _openstudiogltf.GltfUserData_outsideBoundaryConditionObjectName(self)

    def setOutsideBoundaryConditionObjectName(self, outsideBoundaryConditionObjectName):
        return _openstudiogltf.GltfUserData_setOutsideBoundaryConditionObjectName(self, outsideBoundaryConditionObjectName)

    def outsideBoundaryConditionObjectHandle(self):
        return _openstudiogltf.GltfUserData_outsideBoundaryConditionObjectHandle(self)

    def setOutsideBoundaryConditionObjectHandle(self, outsideBoundaryConditionObjectHandle):
        return _openstudiogltf.GltfUserData_setOutsideBoundaryConditionObjectHandle(self, outsideBoundaryConditionObjectHandle)

    def coincidentWithOutsideObject(self):
        return _openstudiogltf.GltfUserData_coincidentWithOutsideObject(self)

    def setCoincidentWithOutsideObject(self, coincidentWithOutsideObject):
        return _openstudiogltf.GltfUserData_setCoincidentWithOutsideObject(self, coincidentWithOutsideObject)

    def sunExposure(self):
        return _openstudiogltf.GltfUserData_sunExposure(self)

    def setSunExposure(self, sunExposure):
        return _openstudiogltf.GltfUserData_setSunExposure(self, sunExposure)

    def windExposure(self):
        return _openstudiogltf.GltfUserData_windExposure(self)

    def setWindExposure(self, windExposure):
        return _openstudiogltf.GltfUserData_setWindExposure(self, windExposure)

    def illuminanceSetpoint(self):
        return _openstudiogltf.GltfUserData_illuminanceSetpoint(self)

    def setIlluminanceSetpoint(self, illuminanceSetpoint):
        return _openstudiogltf.GltfUserData_setIlluminanceSetpoint(self, illuminanceSetpoint)

    def airWall(self):
        return _openstudiogltf.GltfUserData_airWall(self)

    def setAirWall(self, airWall):
        return _openstudiogltf.GltfUserData_setAirWall(self, airWall)

    def airLoopHVACNames(self):
        return _openstudiogltf.GltfUserData_airLoopHVACNames(self)

    def setAirLoopHVACNames(self, airLoopHVACNames):
        return _openstudiogltf.GltfUserData_setAirLoopHVACNames(self, airLoopHVACNames)

    def addAirLoopHVACName(self, airLoopHVACName):
        return _openstudiogltf.GltfUserData_addAirLoopHVACName(self, airLoopHVACName)

    def airLoopHVACHandles(self):
        return _openstudiogltf.GltfUserData_airLoopHVACHandles(self)

    def setAirLoopHVACHandles(self, airLoopHVACHandles):
        return _openstudiogltf.GltfUserData_setAirLoopHVACHandles(self, airLoopHVACHandles)

    def addAirLoopHVACHandle(self, airLoopHVACHandle):
        return _openstudiogltf.GltfUserData_addAirLoopHVACHandle(self, airLoopHVACHandle)

    def airLoopHVACMaterialNames(self):
        return _openstudiogltf.GltfUserData_airLoopHVACMaterialNames(self)

    def setAirLoopHVACMaterialNames(self, airLoopHVACMaterialNames):
        return _openstudiogltf.GltfUserData_setAirLoopHVACMaterialNames(self, airLoopHVACMaterialNames)

    def addAirLoopHVACMaterialName(self, airLoopHVACMaterialName):
        return _openstudiogltf.GltfUserData_addAirLoopHVACMaterialName(self, airLoopHVACMaterialName)

    def surfaceTypeMaterialName(self):
        return _openstudiogltf.GltfUserData_surfaceTypeMaterialName(self)

    def boundaryMaterialName(self):
        return _openstudiogltf.GltfUserData_boundaryMaterialName(self)
    __swig_destroy__ = _openstudiogltf.delete_GltfUserData

# Register GltfUserData in _openstudiogltf:
_openstudiogltf.GltfUserData_swigregister(GltfUserData)
class GltfForwardTranslator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _openstudiogltf.GltfForwardTranslator_swiginit(self, _openstudiogltf.new_GltfForwardTranslator())

    def modelToGLTF(self, model, outputPath):
        return _openstudiogltf.GltfForwardTranslator_modelToGLTF(self, model, outputPath)

    def modelToGLTFString(self, model):
        return _openstudiogltf.GltfForwardTranslator_modelToGLTFString(self, model)

    def loadGLTF(self, *args):
        return _openstudiogltf.GltfForwardTranslator_loadGLTF(self, *args)

    def getMetaData(self):
        return _openstudiogltf.GltfForwardTranslator_getMetaData(self)

    def getUserDataCollection(self):
        return _openstudiogltf.GltfForwardTranslator_getUserDataCollection(self)

    def getUserDataBySurfaceName(self, surfaceName):
        return _openstudiogltf.GltfForwardTranslator_getUserDataBySurfaceName(self, surfaceName)

    def warnings(self):
        return _openstudiogltf.GltfForwardTranslator_warnings(self)

    def errors(self):
        return _openstudiogltf.GltfForwardTranslator_errors(self)
    __swig_destroy__ = _openstudiogltf.delete_GltfForwardTranslator

# Register GltfForwardTranslator in _openstudiogltf:
_openstudiogltf.GltfForwardTranslator_swigregister(GltfForwardTranslator)
class GltfUserDataVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _openstudiogltf.GltfUserDataVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _openstudiogltf.GltfUserDataVector___nonzero__(self)

    def __bool__(self):
        return _openstudiogltf.GltfUserDataVector___bool__(self)

    def __len__(self):
        return _openstudiogltf.GltfUserDataVector___len__(self)

    def __getslice__(self, i, j):
        return _openstudiogltf.GltfUserDataVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _openstudiogltf.GltfUserDataVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _openstudiogltf.GltfUserDataVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _openstudiogltf.GltfUserDataVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _openstudiogltf.GltfUserDataVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _openstudiogltf.GltfUserDataVector___setitem__(self, *args)

    def pop(self):
        return _openstudiogltf.GltfUserDataVector_pop(self)

    def append(self, x):
        return _openstudiogltf.GltfUserDataVector_append(self, x)

    def empty(self):
        return _openstudiogltf.GltfUserDataVector_empty(self)

    def size(self):
        return _openstudiogltf.GltfUserDataVector_size(self)

    def swap(self, v):
        return _openstudiogltf.GltfUserDataVector_swap(self, v)

    def begin(self):
        return _openstudiogltf.GltfUserDataVector_begin(self)

    def end(self):
        return _openstudiogltf.GltfUserDataVector_end(self)

    def rbegin(self):
        return _openstudiogltf.GltfUserDataVector_rbegin(self)

    def rend(self):
        return _openstudiogltf.GltfUserDataVector_rend(self)

    def clear(self):
        return _openstudiogltf.GltfUserDataVector_clear(self)

    def get_allocator(self):
        return _openstudiogltf.GltfUserDataVector_get_allocator(self)

    def pop_back(self):
        return _openstudiogltf.GltfUserDataVector_pop_back(self)

    def erase(self, *args):
        return _openstudiogltf.GltfUserDataVector_erase(self, *args)

    def __init__(self, *args):
        _openstudiogltf.GltfUserDataVector_swiginit(self, _openstudiogltf.new_GltfUserDataVector(*args))

    def push_back(self, x):
        return _openstudiogltf.GltfUserDataVector_push_back(self, x)

    def front(self):
        return _openstudiogltf.GltfUserDataVector_front(self)

    def back(self):
        return _openstudiogltf.GltfUserDataVector_back(self)

    def assign(self, n, x):
        return _openstudiogltf.GltfUserDataVector_assign(self, n, x)

    def resize(self, *args):
        return _openstudiogltf.GltfUserDataVector_resize(self, *args)

    def insert(self, *args):
        return _openstudiogltf.GltfUserDataVector_insert(self, *args)

    def reserve(self, n):
        return _openstudiogltf.GltfUserDataVector_reserve(self, n)

    def capacity(self):
        return _openstudiogltf.GltfUserDataVector_capacity(self)
    __swig_destroy__ = _openstudiogltf.delete_GltfUserDataVector

# Register GltfUserDataVector in _openstudiogltf:
_openstudiogltf.GltfUserDataVector_swigregister(GltfUserDataVector)
class GltfModelObjectMetaDataVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector___nonzero__(self)

    def __bool__(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector___bool__(self)

    def __len__(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector___len__(self)

    def __getslice__(self, i, j):
        return _openstudiogltf.GltfModelObjectMetaDataVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _openstudiogltf.GltfModelObjectMetaDataVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _openstudiogltf.GltfModelObjectMetaDataVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _openstudiogltf.GltfModelObjectMetaDataVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _openstudiogltf.GltfModelObjectMetaDataVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _openstudiogltf.GltfModelObjectMetaDataVector___setitem__(self, *args)

    def pop(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector_pop(self)

    def append(self, x):
        return _openstudiogltf.GltfModelObjectMetaDataVector_append(self, x)

    def empty(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector_empty(self)

    def size(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector_size(self)

    def swap(self, v):
        return _openstudiogltf.GltfModelObjectMetaDataVector_swap(self, v)

    def begin(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector_begin(self)

    def end(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector_end(self)

    def rbegin(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector_rbegin(self)

    def rend(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector_rend(self)

    def clear(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector_clear(self)

    def get_allocator(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector_get_allocator(self)

    def pop_back(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector_pop_back(self)

    def erase(self, *args):
        return _openstudiogltf.GltfModelObjectMetaDataVector_erase(self, *args)

    def __init__(self, *args):
        _openstudiogltf.GltfModelObjectMetaDataVector_swiginit(self, _openstudiogltf.new_GltfModelObjectMetaDataVector(*args))

    def push_back(self, x):
        return _openstudiogltf.GltfModelObjectMetaDataVector_push_back(self, x)

    def front(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector_front(self)

    def back(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector_back(self)

    def assign(self, n, x):
        return _openstudiogltf.GltfModelObjectMetaDataVector_assign(self, n, x)

    def resize(self, *args):
        return _openstudiogltf.GltfModelObjectMetaDataVector_resize(self, *args)

    def insert(self, *args):
        return _openstudiogltf.GltfModelObjectMetaDataVector_insert(self, *args)

    def reserve(self, n):
        return _openstudiogltf.GltfModelObjectMetaDataVector_reserve(self, n)

    def capacity(self):
        return _openstudiogltf.GltfModelObjectMetaDataVector_capacity(self)
    __swig_destroy__ = _openstudiogltf.delete_GltfModelObjectMetaDataVector

# Register GltfModelObjectMetaDataVector in _openstudiogltf:
_openstudiogltf.GltfModelObjectMetaDataVector_swigregister(GltfModelObjectMetaDataVector)
class OptionalGltfUserData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _openstudiogltf.OptionalGltfUserData_swiginit(self, _openstudiogltf.new_OptionalGltfUserData(*args))

    def reset(self):
        return _openstudiogltf.OptionalGltfUserData_reset(self)

    def __nonzero__(self):
        return _openstudiogltf.OptionalGltfUserData___nonzero__(self)
    __bool__ = __nonzero__



    def __ref__(self):
        return _openstudiogltf.OptionalGltfUserData___ref__(self)

    def is_initialized(self):
        return _openstudiogltf.OptionalGltfUserData_is_initialized(self)

    def isNull(self):
        return _openstudiogltf.OptionalGltfUserData_isNull(self)

    def empty(self):
        return _openstudiogltf.OptionalGltfUserData_empty(self)

    def get(self):
        return _openstudiogltf.OptionalGltfUserData_get(self)

    def set(self, t):
        return _openstudiogltf.OptionalGltfUserData_set(self, t)

    def value_or(self, default_value):
        return _openstudiogltf.OptionalGltfUserData_value_or(self, default_value)
    __swig_destroy__ = _openstudiogltf.delete_OptionalGltfUserData

# Register OptionalGltfUserData in _openstudiogltf:
_openstudiogltf.OptionalGltfUserData_swigregister(OptionalGltfUserData)

# Manually added: Lazy-load the json module (python std lib) and return a dict via modelToGLTFString
def _modelToGLTFJSON(self, *args) -> dict:
    import json
    return json.loads(self.modelToGLTFString(*args))

GltfForwardTranslator.modelToGLTFJSON = _modelToGLTFJSON


